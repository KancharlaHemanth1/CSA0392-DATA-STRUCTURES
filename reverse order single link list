#include <stdio.h>
#include <stdlib.h>
void displayArray(int arr[], int size) {
    printf("Array: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}
int searchElement(int arr[], int size, int element) {
    for (int i = 0; i < size; i++) {
        if (arr[i] == element) {
            return i; 
        }
    }
    return -1;
}
void deleteElement(int arr[], int *size, int index) {
    if (index < 0 || index >= *size) {
        printf("Invalid index for deletion.\n");
        return;
    }
    for (int i = index; i < *size - 1; i++) {
        arr[i] = arr[i + 1];
    }
    (*size)--;
}
void insertElement(int arr[], int *size, int element, int index) {
    if (index < 0 || index > *size) {
        printf("Invalid index for insertion.\n");
        return;
    }
    for (int i = *size; i > index; i--) {
        arr[i] = arr[i - 1];
    }

    arr[index] = element;
    (*size)++;
}

int main() {
    int *arr;
    int size = 0;
    int capacity = 10;
    arr = (int *)malloc(capacity * sizeof(int));

    if (arr == NULL) {
        printf("Memory allocation failed.\n");
        return 1;
    }
    insertElement(arr, &size, 1, 0);
    insertElement(arr, &size, 2, 1);
    insertElement(arr, &size, 3, 2);
    insertElement(arr, &size, 4, 3);

    displayArray(arr, size);
    int elementToSearch = 3;
    int index = searchElement(arr, size, elementToSearch);
    if (index != -1) {
        printf("Element %d found at index %d.\n", elementToSearch, index);
    } else {
        printf("Element %d not found in the array.\n", elementToSearch);
    }
    int elementToDelete = 2;
    index = searchElement(arr, size, elementToDelete);
    if (index != -1) {
        deleteElement(arr, &size, index);
        printf("Element %d deleted.\n", elementToDelete);
        displayArray(arr, size);
    } else {
        printf("Element %d not found in the array. Deletion failed.\n", elementToDelete);
    }
    int elementToInsert = 5;
    int insertIndex = 2;
    insertElement(arr, &size, elementToInsert, insertIndex);
    printf("Element %d inserted at index %d.\n", elementToInsert, insertIndex);
    displayArray(arr, size);
    free(arr);

    return 0;
}
